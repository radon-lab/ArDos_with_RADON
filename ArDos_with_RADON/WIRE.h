boolean wireBeginTransmission(uint8_t addr, boolean rw = 0x00); //запуск передачи
//---------------------------------------Инициализация wire--------------------------------------------
void wireInit(void) //инициализация wire
{
#if WIRE_PULL
  PORTC |= 0x30; //включаем подтяжку SDA и SCL
#else
  PORTC &= 0xCF; //отключаем подтяжку SDA и SCL
#endif
  DDRC &= 0xCF; //устанавливаем SDA и SCL как входы
  TWBR = 72; //устанавливаем скорость 100kHz
  TWSR = 0; //устанавливаем пределитель 1
}
//-----------------------------------Ожидание готовности шины------------------------------------------
boolean wireWait(void) //ожидание готовности шины
{
  for (uint16_t i = 500; i; i--) { //ждем флага прерывания
    if (TWCR & (0x01 << TWINT)) return (boolean)((TWSR & 0xF8) == 0x20 || (TWSR & 0xF8) == 0x30); //возвращаем состояние шины
  }
  return 1; //возвращаем ошибку
}
//----------------------------------------Запуск шины wire---------------------------------------------
void wireStart(void) //запуск шины wire
{
  TWCR = (0x01 << TWSTA) | (0x01 << TWEN) | (0x01 << TWINT); //отправляем команду старт и устанавливаем флаг выполнить задачу
  wireWait(); //ожидание готовности шины
}
//---------------------------------------Остановка шины wire-------------------------------------------
void wireEnd(void) //остановка шины wire
{
  TWCR = (0x01 << TWSTO) | (0x01 << TWEN) | (0x01 << TWINT); //отправляем команду стоп и устанавливаем флаг выполнить задачу
}
//---------------------------------------Отправка байта------------------------------------------------
boolean wireWrite(uint8_t data) //отправка байта
{
  TWDR = data; //записываем данные в регистр
  TWCR = (0x01 << TWEN) | (0x01 << TWINT); //запустить передачу
  return wireWait(); //ожидание готовности шины
}
//---------------------------------Чтение запрошенного байта-------------------------------------------
uint8_t wireRead(void) //чтение запрошенного байта
{
  TWCR = (0x01 << TWEN) | (0x01 << TWINT) | (0x01 << TWEA); //запускаем чтение шины с подтверждением
  wireWait(); //ожидание готовности шины
  return TWDR; //вернуть принятый байт
}
//----------------------------------Чтение последнего байта--------------------------------------------
uint8_t wireReadEndByte(void) //чтение последнего байта
{
  TWCR = (0x01 << TWEN) | (0x01 << TWINT); //запускаем чтение шины без подтверждения
  wireWait(); //ожидание готовности шины
  wireEnd(); //остановка шины wire
  return TWDR; //вернуть принятый байт
}
//--------------------------------------Запуск передачи------------------------------------------------
boolean wireBeginTransmission(uint8_t addr, boolean rw) //запуск передачи
{
  wireStart(); //запуск шины wire
  if (wireWrite((addr << 0x01) | rw)) { //отправка устройству адреса с битом write
    wireEnd(); //остановка шины wire
    return 1; //возвращаем ошибку
  }
  return 0;
}
//--------------------------------------Запрос чтения данных------------------------------------------
boolean wireRequestFrom(uint8_t addr, uint8_t reg) //запрос чтения данных
{
  if (wireBeginTransmission(addr)) return 1; //отправка устройству адреса с битом write
  wireWrite(reg); //отправка устройству начального адреса чтения
  if (wireBeginTransmission(addr, 0x01)) return 1; //отправка устройству адреса с битом read

  return 0; //возвращаем готовность к чтению данных
}
