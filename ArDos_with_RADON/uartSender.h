#if USE_UART && (UART_SEND_BACK || UART_SEND_DOSE || UART_SEND_IMP)
//--------------------------------Инициализация UART-----------------------------------
void dataChannelInit(void) //инициализация UART
{
  PRR &= ~(0x01 << PRUSART0); //включаем питание UART
  UBRR0 = (F_CPU / (8UL * UART_BAUND)) - 1; //устанавливаем битрейт
  UCSR0A = (0x01 << U2X0); //устанавливаем удвоение скорости
  UCSR0B = (0x01 << TXEN0); //разрешаем передачу
  UCSR0C = ((0x01 << UCSZ01) | (0x01 << UCSZ00)); //длинна пакета 8бит
}
//----------------------------------Выключение UART-----------------------------------
void dataChannelEnd(void) //выключение UART
{
  UCSR0B = 0; //выключаем UART
  PRR |= (0x01 << PRUSART0); //включаем питание UART
}
//-----------------------------------Состояние UART-----------------------------------
boolean dataChannelState(void) //состояние UART
{
  return (PRR & (0x01 << PRUSART0)); //возвращаем состояние питания
}
//---------------------------------Отправка символа-----------------------------------
void sendChar(char data) //отправка символа
{
  while (!(UCSR0A & (0x01 << UDRE0))); //ждем пока отправится байт
  UDR0 = data; //отправляем байт
}
//------------------------------Отправка конца строки---------------------------------
void sendEnd(void) //отправка конца строки
{
  const char buff[] = {'\0', '\r', '\n'}; //буфер конца строки
  for(uint8_t i = 0; i < sizeof(buff); i++) sendChar(buff[i]); //отправляем буфер конца строки
}
//-----------------------------------Отправка числа-----------------------------------
void sendNum(uint32_t num, char start, char end) //отправка числа
{
  char buff[15]; //буфер числа
  uint8_t count = 0; //счетчик символов

  buff[count++] = end; //установили символ разделитель

  if (num) { //если есть число
    while (num > 0) { //пока есть число
      buff[count++] = 48 + (num % 10); //установили символ
      num = (num - (num % 10)) / 10; //убавили число
    }
  }
  else buff[count++] = 48; //иначе ноль

  buff[count++] = start; //установили символ разделитель

  while (count) sendChar(buff[--count]); //отправляем данные
}
#endif
