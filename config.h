//Конфигурация прошивки//
#define WDT_TIMEOUT         8000 //длительность тайм-аута колибровки WDT(50..10000)(ms)
#define START_TIME          1000 //длительность ожидания перед стартом прошивки(50..10000)(ms)
#define FONT_TIME           2000 //длительность ожидания заставки при первом включении(50..10000)(ms)
#define POWER_TIME          2000 //длительность ожидания отображениия разряженой акб при включении(50..10000)(ms)
#define MASSEGE_TIME        1000 //длительность отображения окон(50..10000)(ms)
#define START_PUMP_TIME     3000 //длительность до автоматического выхода из первой накачки преобразователя(50..10000)(ms)
#define ERROR_MASSEGE_TIME  3000 //длительность отображения окон ошибок(50..10000)(ms)
#define ERROR_LENGTHY_TIME  10000 //длительность до отображения следующей ошибок(50..10000)(ms)

#define ALARM_AUTO_GIST     10 //гистерезис(разница) автоматического отключения тревоги(1..99)(%)

#define TIME_OUT_SETTINGS   15 //тайм-аут автоматического выхода из настроек(0 - выкл)(5..250)(s)
#define TIME_OUT_FAST       15 //тайм-аут автоматического выхода из быстрого меню(0 - выкл)(5..250)(s)
#define TIME_OUT_PARAM      15 //тайм-аут автоматического выхода из параметров(0 - выкл)(5..250)(s)
#define TIME_OUT_DEBUG      15 //тайм-аут автоматического выхода из отладки(0 - выкл)(5..250)(s)
#define TIME_OUT_DOSE       15 //тайм-аут автоматического выхода из сброса дозы(0 - выкл)(5..250)(s)

#define STAT_UPD_TIME       60 //интервал записи статистики в память(60..3600)(s)

#define IMP_ERROR_TIME      60 //время после которого можно ститать что импульсы от счетчика отсутствуют(10..255)(s)

#define UPD_BAT_TIME        5 //частота обновлния информации о заряде батареи(1..255)(s)
#define LOW_BAT_TIME        30 //частота появления сообщения о разряде батареи(1..255)(s)
#define LOW_BAT_POWER       95 //при каком значение АЦП считать акб разряженной и не давать у-ву включиться(0..255)
#define LOW_BAT_STAT        90 //при каком значение АЦП считать акб разряженной(0..255)
#define LOW_BAT_STAT_SLEEP  95 //при каком значение АЦП считать акб разряженной во сне(0..255)
#define MIN_BAT             95 //значение АЦП при разряженной батарее(0..255)
#define MAX_BAT             70 //значение АЦП при заряженной батарее(0..255)

#define GRAF_RAD      1000 //максимальный фон предела графика(10..10000)(uR)
#define GRAF_MAX_MS   1015 //максимальное время обновления графика(140..65000)(ms)
#define GRAF_MIN_MS   140 //минимальное время обновления графика(140..65000)(ms)
#define GRAF_IND_MAX  200 //максимум предела шкалы частиц/сек.(48..10000)(имп/с)
#define GRAF_COEF_MAX 1.50 //коэффициент маштабирования графика(1.00..2.00)


#define TYPE_CHAR_FILL  43 //выбор симола заполнителя на главных экранах(48 - "0" | 47 - "/" | 46 - "." | 45 - "-" | 44 - "_" | 43 - " ")

#define DEAD_TIME  0.0002 //мертвое время счетчика, 200мкрС для сбм-20(0.0001..0.0002)(us/1000000)
#define COUNT_RATE 100   //минимальная скорость счета для начала корректировки(50..500)(imp/s)


//Технические настройки
#define BUFF_LENGTHY     121  //длинна буфера секундных замеров(10..255)
#define TIME_CORRECT     0   //корректировка реального времени(-1750..1750)(us/10)
uint8_t CYCLE_OVERFLOW = 10; //количество циклов подкачки ВВ до аварийного выхода и выдачи ошибки(10..255)

#define BTN_GIST_TICK    2 //количество циклов для защиты от дребезга(0..255)
#define BTN_HOLD_TICK    30 //количество циклов после которого считается что кнопка зажата(0..255)

#define RAD_PWR_MANAGER  1000 //порог отключения режима сна для более корректной работы устройства(100..10000)(uRh)
#define RAD_PWR_DOWN     50 //порог отключения режима глубокого сна для более корректной работы устройства(0..100)(uRh)

#define COEF_DEBUG       0 //выводить отладку коэффициента рядом с надписью "ФОН"(0 - не выводить | 1 - выводить)
#define MASS_TIME        7 //всего данных в массиве коэффициентов времени
#define MASS_BACK        7 //всего данных в массиве коэффициентов фона

const uint8_t time_mass[MASS_TIME][2] PROGMEM = { //массив выборки элементов из основного буффера для сравнения
  2, 6,  //0-й порог
  3, 9,  //1-й порог
  4, 12, //2-й порог
  5, 15, //3-й порог
  6, 18, //4-й порог
  7, 21, //5-й порог
  8, 24  //6-й порог
};

const float coef_time_mass[MASS_TIME] PROGMEM = { //массив коэффициентов сравнения для выявления скачков/спадов
  5.00, //0-й порог
  4.00, //1-й порог
  3.00, //2-й порог
  2.50, //3-й порог
  2.00, //4-й порог
  1.70, //5-й порог
  1.50  //6-й порог
};

const uint16_t back_mass[MASS_BACK + 1] PROGMEM = { //массив квантования коэффициентов поправки на текущий фон
  0,     //0-й минимум
  15,    //0-й порог 
  30,    //1-й порог
  100,   //2-й порог
  1000,  //3-й порог
  10000, //4-й порог
  35200, //5-й порог
  65500  //6-й порог
};

const float coef_back_mass[MASS_BACK] PROGMEM = { //массив коэффициентов поправки на текущий фон(10.00..1.00)
  5.00, //0-й порог
  4.00, //1-й порог
  3.00, //2-й порог
  2.50, //3-й порог
  2.00, //4-й порог
  1.75, //5-й порог
  1.50  //6-й порог
};

//--сравнитель, знаков полсе запятой, делитель, ед.измер--
const uint32_t patern_Rh[][4] PROGMEM = { //паттерн значений переключения единиц мкР
  10000, 0, 1, 0,
  100000, 1, 1000, 1,
  10000000, 0, 1000, 1
};

//--сравнитель, знаков полсе запятой, делитель, ед.измер--
const uint32_t patern_Svh[][4] PROGMEM = { //паттерн значений переключения единиц мкЗв
  1000, 2, 100, 0,
  10000, 1, 100, 0,
  1000000, 2, 100000, 1,
  10000000, 1, 100000, 1,
  1000000000, 0, 100000, 1
};

//Конфигурация звуков//
#define FREQ_BUZZ  500 //частота щелчков(10..10000)(Hz)
#define TIME_BUZZ  10 //длительность щелчков(10..500)(ms)

#define FREQ_BEEP  2000 //частота звука клавиш(10..10000)(Hz)
#define TIME_BEEP  30 //длительность звука клавиш(10..500)(ms)


//Конфигурация вибрации тревоги//
#define VIBRO_TIME_ON     150 //длительность включения вибромотора(50..500)(ms)
#define VIBRO_TIME_OFF    250 //длительность выключения вибромотора(50..500)(ms)
#define VIBRO_TIME_WAINT  550 //длительность паузы до следующего цикла включения вибромотора(50..1000)(ms)


//Конфигурация звука оповещения о готовности замера//
#define MEASUR_SOUND 1 //вкл/выкл звука готовности замера(1 - звук включен | 0 - звук выключен)

#define SAMPLE_MEASUR_0_FREQ   3000 //частота семпла 0 готовности замера(10..10000)(Hz)
#define SAMPLE_MEASUR_0_TIME   100 //длительность звука семпла 0 готовности замера(50..500)(ms)
#define SAMPLE_MEASUR_0_WAINT  200 //длительность паузы после семпла 0 готовности замера(50..1000)(ms)

#define SAMPLE_MEASUR_1_FREQ   3000 //частота семпла 1 готовности замера(10..10000)(Hz)
#define SAMPLE_MEASUR_1_TIME   100 //длительность звука семпла 1 готовности замера(50..500)(ms)
#define SAMPLE_MEASUR_1_WAINT  200 //длительность паузы после семпла 1 готовности замера(50..1000)(ms)

#define SAMPLE_MEASUR_2_FREQ   3000 //частота семпла 2 готовности замера(10..10000)(Hz)
#define SAMPLE_MEASUR_2_TIME   100 //длительность звука семпла 2 готовности замера(50..500)(ms)
#define SAMPLE_MEASUR_2_WAINT  200 //длительность паузы после семпла 2 готовности замера(50..1000)(ms)


//Конфигурация звука разряда акб во сне//
#define BAT_SLEEP_LOW_SOUND 1 //вкл/выкл звука разряда акб во сне(1 - звук включен | 0 - звук выключен)

#define SAMPLE_BAT_SLEEP_0_FREQ   3000 //частота семпла 0 разряда акб во сне(10..10000)(Hz)
#define SAMPLE_BAT_SLEEP_0_TIME   200 //длительность звука семпла 0 разряда акб во сне(50..500)(ms)
#define SAMPLE_BAT_SLEEP_0_WAINT  200 //длительность паузы после семпла 0 разряда акб во сне(50..1000)(ms)

#define SAMPLE_BAT_SLEEP_1_FREQ   2000 //частота семпла 1 разряда акб во сне(10..10000)(Hz)
#define SAMPLE_BAT_SLEEP_1_TIME   200 //длительность звука семпла 1 разряда акб во сне(50..500)(ms)
#define SAMPLE_BAT_SLEEP_1_WAINT  200 //длительность паузы после семпла 1 разряда акб во сне(50..1000)(ms)

#define SAMPLE_BAT_SLEEP_2_FREQ   1000 //частота семпла 2 разряда акб во сне(10..10000)(Hz)
#define SAMPLE_BAT_SLEEP_2_TIME   200 //длительность звука семпла 2 разряда акб во сне(50..500)(ms)
#define SAMPLE_BAT_SLEEP_2_WAINT  200 //длительность паузы после семпла 2 разряда акб во сне(50..1000)(ms)


//Конфигурация звука разряда акб//
#define BAT_LOW_SOUND 1 //вкл/выкл звука разряда акб(1 - звук включен | 0 - звук выключен)

#define SAMPLE_BAT_0_FREQ   3000 //частота семпла 0 разряда акб(10..10000)(Hz)
#define SAMPLE_BAT_0_TIME   200 //длительность звука семпла 0 разряда акб(50..500)(ms)
#define SAMPLE_BAT_0_WAINT  200 //длительность паузы после семпла 0 разряда акб(50..1000)(ms)

#define SAMPLE_BAT_1_FREQ   2000 //частота семпла 1 разряда акб(10..10000)(Hz)
#define SAMPLE_BAT_1_TIME   200 //длительность звука семпла 1 разряда акб(50..500)(ms)
#define SAMPLE_BAT_1_WAINT  200 //длительность паузы после семпла 1 разряда акб(50..1000)(ms)

#define SAMPLE_BAT_2_FREQ   1000 //частота семпла 2 разряда акб(10..10000)(Hz)
#define SAMPLE_BAT_2_TIME   200 //длительность звука семпла 2 разряда акб(50..500)(ms)
#define SAMPLE_BAT_2_WAINT  200 //длительность паузы после семпла 2 разряда акб(50..1000)(ms)


//Конфигурация звука открытия быстрого меню//
#define FAST_SOUND 1 //вкл/выкл звука открытия быстрого меню(1 - звук включен | 0 - звук выключен)

#define SAMPLE_FAST_0_FREQ   1000 //частота семпла 0 быстрого меню(10..10000)(Hz)
#define SAMPLE_FAST_0_TIME   100 //длительность звука семпла 0 быстрого меню(50..500)(ms)
#define SAMPLE_FAST_0_WAINT  100 //длительность паузы после семпла 0 быстрого меню(50..1000)(ms)

#define SAMPLE_FAST_1_FREQ   2000 //частота семпла 1 быстрого меню(10..10000)(Hz)
#define SAMPLE_FAST_1_TIME   100 //длительность звука семпла 1 быстрого меню(50..500)(ms)
#define SAMPLE_FAST_1_WAINT  100 //длительность паузы после семпла 1 быстрого меню(50..1000)(ms)

#define SAMPLE_FAST_2_FREQ   3000 //частота семпла 2 быстрого меню(10..10000)(Hz)
#define SAMPLE_FAST_2_TIME   100 //длительность звука семпла 2 быстрого меню(50..500)(ms)
#define SAMPLE_FAST_2_WAINT  100 //длительность паузы после семпла 2 быстрого меню(50..1000)(ms)


//Конфигурация звука предупреждения//
#define SAMPLE_WARN_0_FREQ   3000 //частота семпла 0 предупреждения(10..10000)(Hz)
#define SAMPLE_WARN_0_TIME   200 //длительность звука семпла 0 предупреждения(50..500)(ms)
#define SAMPLE_WARN_0_WAINT  200 //длительность паузы после семпла 0 предупреждения(50..1000)(ms)

#define SAMPLE_WARN_1_FREQ   2000 //частота семпла 1 предупреждения(10..10000)(Hz)
#define SAMPLE_WARN_1_TIME   200 //длительность звука семпла 1 предупреждения(50..500)(ms)
#define SAMPLE_WARN_1_WAINT  200 //длительность паузы после семпла 1 предупреждения(50..1000)(ms)

#define SAMPLE_WARN_2_FREQ   3000 //частота семпла 2 предупреждения(10..10000)(Hz)
#define SAMPLE_WARN_2_TIME   200 //длительность звука семпла 2 предупреждения(50..500)(ms)
#define SAMPLE_WARN_2_WAINT  200 //длительность паузы после семпла 2 предупреждения(50..1000)(ms)

#define SAMPLE_WARN_3_FREQ          2000 //частота семпла 3 предупреждения(10..10000)(Hz)
#define SAMPLE_WARN_3_TIME          200 //длительность звука семпла 3 предупреждения(50..500)(ms)
#define SAMPLE_WARN_OVERFLOW_WAINT  1000 //длительность паузы перед началом нового круга(50..1000)(ms)


//Конфигурация звука тревоги//
#define SAMPLE_0_FREQ   1100 //частота семпла 0 тревоги(10..10000)(Hz)
#define SAMPLE_0_TIME   100 //длительность звука семпла 0 тревоги(50..500)(ms)
#define SAMPLE_0_WAINT  150 //длительность паузы после семпла 0 тревоги(50..1000)(ms)

#define SAMPLE_1_FREQ   1100 //частота семпла 1 тревоги(10..10000)(Hz)
#define SAMPLE_1_TIME   100 //длительность звука семпла 1 тревоги(50..500)(ms)
#define SAMPLE_1_WAINT  150 //длительность паузы после семпла 1 тревоги(50..1000)(ms)

#define SAMPLE_2_FREQ   1100 //частота семпла 2 тревоги(10..10000)(Hz)
#define SAMPLE_2_TIME   100 //длительность звука семпла 2 тревоги(50..500)(ms)
#define SAMPLE_2_WAINT  150 //длительность паузы после семпла 2 тревоги(50..1000)(ms)

#define SAMPLE_3_FREQ   1100 //частота семпла 3 тревоги(10..10000)(Hz)
#define SAMPLE_3_TIME   100 //длительность звука семпла 3 тревоги(50..500)(ms)
#define SAMPLE_3_WAINT  150 //длительность паузы после семпла 3 тревоги(50..1000)(ms)

#define SAMPLE_4_FREQ   3000 //частота семпла 4 тревоги(10..10000)(Hz)
#define SAMPLE_4_TIME   200 //длительность звука семпла 4 тревоги(50..500)(ms)
#define SAMPLE_4_WAINT  250 //длительность паузы после семпла 4 тревоги(50..1000)(ms)

#define SAMPLE_5_FREQ   3000 //частота семпла 5 тревоги(10..10000)(Hz)
#define SAMPLE_5_TIME   200 //длительность звука семпла 5 тревоги(50..500)(ms)
#define SAMPLE_5_WAINT  250 //длительность паузы после семпла 5 тревоги(50..1000)(ms)

#define SAMPLE_6_FREQ   1100 //частота семпла 6 тревоги(10..10000)(Hz)
#define SAMPLE_6_TIME   100 //длительность звука семпла 6 тревоги(50..500)(ms)
#define SAMPLE_6_WAINT  150 //длительность паузы после семпла 6 тревоги(50..1000)(ms)

#define SAMPLE_7_FREQ   1100 //частота семпла 7 тревоги(10..10000)(Hz)
#define SAMPLE_7_TIME   100 //длительность звука семпла 7 тревоги(50..500)(ms)
#define SAMPLE_7_WAINT  150 //длительность паузы после семпла 7 тревоги(50..1000)(ms)

#define SAMPLE_8_FREQ          1100 //частота семпла 8 тревоги(10..10000)(Hz)
#define SAMPLE_8_TIME          100 //длительность звука семпла 8 тревоги(50..500)(ms)
#define SAMPLE_OVERFLOW_WAINT  550 //длительность паузы перед началом нового круга(50..1000)(ms)
